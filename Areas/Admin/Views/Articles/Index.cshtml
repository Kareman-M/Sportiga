@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Areas/Admin/Shared/_Layout.cshtml";
}

<section class="content">

    <!-- Default box -->
    <div class="card card-solid">
        <div class="card-body pb-0">
            <div class="row d-flex align-items-stretch" id="t1">

                @{ foreach (var item in ViewBag.articles)
                    {
                        foreach (var cat in ViewBag.categories)
                        {
                            if (cat.ID == item.categoryId)
                            {

                                ViewData["Title"] = cat.Name;
                            }
                        }
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-stretch item">
                            <div class="card bg-light">
                                <div class="card-header text-muted border-bottom-0">
                                    @item.Date
                                </div>
                                <div class="card-body pt-0">
                                    <div class="row">
                                        <div class="col-7">
                                            @foreach (var user in ViewBag.Users)
                                            {
                                                if (user.Id == item.ApplicationUsersId)
                                                {

                                                    <h2 class="lead"><b>@user.FullName </b></h2>
                                                }

                                            }

                                            <p class="text-muted text-sm">@item.Title </p>

                                        </div>
                                        <div class="col-5 text-center">
                                            <img src="~/images/@item.Image" alt="" class="img-circle img-fluid" style="height: 150px; width: 150px;">
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="text-right">
                                        <a href="/admin/Articles/ViewArticle/@item.ID" class="btn btn-sm btn-primary">
                                            View
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }

            </div>
        </div>
        <!-- /.card-body -->
       
    </div>
    <!-- /.card -->

</section>


@section Customscripts{
    <script>
        /**
 * Sets a CSS style on the selected element(s) with !important priority.
 * This supports camelCased CSS style property names and calling with an object
 * like the jQuery `css()` method.
 * Unlike jQuery's css() this does NOT work as a getter.
 *
 * @@param {string|Object<string, string>} name
 * @@param {string|undefined} value
 */
jQuery.fn.cssImportant = function(name, value) {
  const $this = this;
  const applyStyles = (n, v) => {
    // Convert style name from camelCase to dashed-case.
    const dashedName = n.replace(/(.)([A-Z])(.)/g, (str, m1, upper, m2) => {
      return m1 + "-" + upper.toLowerCase() + m2;
    });
    // Loop over each element in the selector and set the styles.
    $this.each(function(){
      this.style.setProperty(dashedName, v, 'important');
    });
  };
  // If called with the first parameter that is an object,
  // Loop over the entries in the object and apply those styles.
  if(jQuery.isPlainObject(name)){
    for(const [n, v] of Object.entries(name)){
       applyStyles(n, v);
    }
  } else {
    // Otherwise called with style name and value.
    applyStyles(name, value);
  }
  // This is required for making jQuery plugin calls chainable.
  return $this;
};

        $(document).ready(function () {
            $('#t1').after('<div id="nav" class="text-center"></div>');
            var rowsShown = 10;
            var rowsTotal = $('#t1 .item').length;
            var numPages = rowsTotal / rowsShown;
            for (i = 0; i < numPages; i++) {
                var pageNum = i + 1;
                $('#nav').append('<a href="#" class="btn-outline-info" rel="' + i + '">&emsp;' + pageNum + '&emsp;</a> ');
            }
            $('#t1 .item').cssImportant('display', 'none').hide();
            $('#t1 .item').slice(0, rowsShown).cssImportant('display', 'block').show();
            $('#nav a:first').addClass('active');
            $('#nav a').bind('click', function (e) {
                e.preventDefault();
                $('#nav a').removeClass('active');
                $(this).addClass('active');
                var currPage = $(this).attr('rel');
                var startItem = currPage * rowsShown;
                var endItem = startItem + rowsShown;
                //$('#t1 .item').attr('style', 'display:none !important')

                $('#t1 .item').cssImportant('display', 'none').hide().slice(startItem, endItem).
                    css('display', 'flex').animate({
                        display: 'block'
                    }, 300);
            });
        });
    </script>

}